<?php

namespace App\Providers;

use Illuminate\Cache\RateLimiting\Limit;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\RateLimiter;
use Illuminate\Support\Facades\Route;
use Illuminate\Support\ServiceProvider;

class ModulesServiceProvider extends ServiceProvider
{
    protected $modules_name ;
    protected $namespace = 'app/Modules/';

    /**
     * Register any application services.
     *
     * @return void
     */
    public function register()
    {
        if (file_exists($this->namespace . $this->modules_name . '/Config/custom.php'))
            $this->mergeConfigFrom(base_path($this->namespace . $this->modules_name . '/Config/custom.php'), $this->modules_name);
    }
    public function boot()
    {
        $this->configureRateLimiting();
        $this->getRoutes();
        $this->getLoadViewsFrom();
        $this->getLoadMigrationsFrom();
        $this->loadTranslationsFrom(base_path( $this->namespace . $this->modules_name . "/Languages"), $this->modules_name);
    }
    /**
     * Configure the rate limiters for the application.
     *
     * @return void
     */
    protected function configureRateLimiting()
    {
        RateLimiter::for('api', function (Request $request) {
            return Limit::perMinute(60)->by(optional($request->user())->id ?: $request->ip());
        });
    }
    /**
     * @return \Illuminate\Routing\RouteCollection|\Illuminate\Routing\RouteCollectionInterface|void
     */
    public function getRoutes()
    {
        Route::prefix('api')
            ->middleware('api')
            ->group(base_path($this->namespace . $this->modules_name . '/Routes/api.php'));

        Route::middleware('web')
            ->group(base_path($this->namespace . $this->modules_name . '/Routes/routes.php'));
    }
    public function getLoadMigrationsFrom()
    {
        $this->loadMigrationsFrom(base_path($this->namespace . $this->modules_name . '/Migrations'));
    }
    public function getLoadViewsFrom()
    {
        parent::loadViewsFrom(base_path($this->namespace . $this->modules_name . '/resources/views'), $this->modules_name); // TODO: Change the autogenerated stub
    }

}
